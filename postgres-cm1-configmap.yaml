apiVersion: v1
data:
  init-db.sql: "-- Create tables if they don't exist\nCREATE TABLE IF NOT EXISTS \"users\" (\n  \"id\" SERIAL PRIMARY KEY,\n  \"keycloak_id\" TEXT,\n  \"username\" TEXT NOT NULL,\n  \"name\" TEXT NOT NULL,\n  \"email\" TEXT NOT NULL,\n  \"job_title\" TEXT,\n  \"headshot_url\" TEXT,\n  \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  \"updated_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE IF NOT EXISTS \"events\" (\n  \"id\" SERIAL PRIMARY KEY,\n  \"name\" TEXT NOT NULL,\n  \"description\" TEXT,\n  \"location\" TEXT,\n  \"start_date\" DATE NOT NULL,\n  \"end_date\" DATE NOT NULL,\n  \"website\" TEXT,\n  \"type\" TEXT,\n  \"goals\" TEXT[],\n  \"status\" TEXT NOT NULL,\n  \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  \"updated_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE IF NOT EXISTS \"cfp_submissions\" (\n  \"id\" SERIAL PRIMARY KEY,\n  \"event_id\" INTEGER NOT NULL REFERENCES \"events\"(\"id\"),\n  \"title\" TEXT NOT NULL,\n  \"abstract\" TEXT NOT NULL,\n  \"submitter_id\" INTEGER NOT NULL REFERENCES \"users\"(\"id\"),\n  \"submitter_name\" TEXT NOT NULL,\n  \"status\" TEXT NOT NULL,\n  \"submission_date\" DATE NOT NULL,\n  \"notes\" TEXT,\n  \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  \"updated_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE IF NOT EXISTS \"attendees\" (\n  \"id\" SERIAL PRIMARY KEY,\n  \"event_id\" INTEGER NOT NULL REFERENCES \"events\"(\"id\"),\n  \"name\" TEXT NOT NULL,\n  \"email\" TEXT NOT NULL,\n  \"role\" TEXT,\n  \"user_id\" INTEGER REFERENCES \"users\"(\"id\"),\n  \"notes\" TEXT,\n  \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  \"updated_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE IF NOT EXISTS \"sponsorships\" (\n  \"id\" SERIAL PRIMARY KEY,\n  \"event_id\" INTEGER NOT NULL REFERENCES \"events\"(\"id\"),\n  \"level\" TEXT NOT NULL,\n  \"amount\" NUMERIC(10, 2) NOT NULL,\n  \"benefits\" TEXT,\n  \"status\" TEXT NOT NULL,\n  \"notes\" TEXT,\n  \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  \"updated_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE IF NOT EXISTS \"assets\" (\n  \"id\" SERIAL PRIMARY KEY,\n  \"name\" TEXT NOT NULL,\n  \"type\" TEXT NOT NULL,\n  \"file_path\" TEXT NOT NULL,\n  \"file_size\" INTEGER NOT NULL,\n  \"mime_type\" TEXT NOT NULL,\n  \"uploaded_by\" INTEGER REFERENCES \"users\"(\"id\"),\n  \"uploaded_by_name\" TEXT,\n  \"event_id\" INTEGER REFERENCES \"events\"(\"id\"),\n  \"cfp_submission_id\" INTEGER REFERENCES \"cfp_submissions\"(\"id\"),\n  \"description\" TEXT,\n  \"uploaded_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE IF NOT EXISTS \"stakeholders\" (\n  \"id\" SERIAL PRIMARY KEY,\n  \"name\" TEXT NOT NULL,\n  \"email\" TEXT NOT NULL,\n  \"role\" TEXT NOT NULL,\n  \"department\" TEXT,\n  \"notes\" TEXT,\n  \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  \"updated_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE IF NOT EXISTS \"approval_workflows\" (\n  \"id\" SERIAL PRIMARY KEY,\n  \"title\" TEXT NOT NULL,\n  \"description\" TEXT,\n  \"item_type\" TEXT NOT NULL,\n  \"item_id\" INTEGER NOT NULL,\n  \"priority\" TEXT,\n  \"status\" TEXT NOT NULL DEFAULT 'pending',\n  \"due_date\" DATE,\n  \"estimated_costs\" TEXT,\n  \"requester_id\" INTEGER REFERENCES \"users\"(\"id\"),\n  \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  \"updated_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  \"metadata\" JSONB DEFAULT '{}'\n);\n\nCREATE TABLE IF NOT EXISTS \"workflow_reviewers\" (\n  \"id\" SERIAL PRIMARY KEY,\n  \"workflow_id\" INTEGER REFERENCES \"approval_workflows\"(\"id\"),\n  \"user_id\" INTEGER REFERENCES \"users\"(\"id\"),\n  \"status\" TEXT DEFAULT 'pending',\n  \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  \"updated_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE IF NOT EXISTS \"workflow_stakeholders\" (\n  \"id\" SERIAL PRIMARY KEY,\n  \"workflow_id\" INTEGER REFERENCES \"approval_workflows\"(\"id\"),\n  \"stakeholder_id\" INTEGER REFERENCES \"stakeholders\"(\"id\"),\n  \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE IF NOT EXISTS \"workflow_comments\" (\n  \"id\" SERIAL PRIMARY KEY,\n  \"workflow_id\" INTEGER REFERENCES \"approval_workflows\"(\"id\"),\n  \"user_id\" INTEGER REFERENCES \"users\"(\"id\"),\n  \"comment\" TEXT NOT NULL,\n  \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE IF NOT EXISTS \"workflow_history\" (\n  \"id\" SERIAL PRIMARY KEY,\n  \"workflow_id\" INTEGER REFERENCES \"approval_workflows\"(\"id\"),\n  \"user_id\" INTEGER REFERENCES \"users\"(\"id\"),\n  \"action\" TEXT NOT NULL,\n  \"details\" TEXT,\n  \"created_at\" TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Insert seed data\n-- Demo users\nINSERT INTO \"users\" (\"id\", \"keycloak_id\", \"username\", \"name\", \"email\", \"job_title\")\nVALUES \n  (1, 'user-1', 'admin', 'Alex Johnson', 'alex@example.com', 'OSPO Manager'),\n  (2, 'user-2', 'demo', 'David G. Simmons', 'david@example.com', 'AI Community Architect')\nON CONFLICT (id) DO NOTHING;\n\n-- Events\nINSERT INTO \"events\" (\"id\", \"name\", \"description\", \"location\", \"start_date\", \"end_date\", \"website\", \"type\", \"goals\", \"status\")\nVALUES \n  (6, 'KubeCon + CloudNativeCon Europe', 'The Cloud Native Computing Foundation flagship conference', 'Paris, France', '2025-03-18', '2025-03-21', 'https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/', 'conference', '{\"community_growth\", \"networking\", \"lead_generation\"}', 'confirmed'),\n  (7, 'Open Source Summit North America', 'The premier event for open source developers and communities', 'Seattle, WA', '2025-04-15', '2025-04-18', 'https://events.linuxfoundation.org/open-source-summit-north-america/', 'conference', '{\"thought_leadership\", \"networking\"}', 'confirmed'),\n  (8, 'DevOps Days Seattle', 'Local DevOps community conference', 'Seattle, WA', '2025-05-12', '2025-05-13', 'https://devopsdays.org/seattle', 'conference', '{\"community_growth\"}', 'planned'),\n  (9, 'CNCF AI Summit', 'Cloud Native AI Solutions', 'San Francisco, CA', '2025-06-24', '2025-06-25', 'https://www.cncf.io/events/', 'summit', '{\"thought_leadership\", \"community_growth\"}', 'planned'),\n  (10, 'OSPO Con Europe', 'Conference for Open Source Program Offices', 'London, UK', '2025-09-10', '2025-09-12', 'https://ospocon.org', 'conference', '{\"thought_leadership\", \"networking\"}', 'tentative')\nON CONFLICT (id) DO NOTHING;\n\n-- CFP Submissions\nINSERT INTO \"cfp_submissions\" (\"id\", \"event_id\", \"title\", \"abstract\", \"submitter_id\", \"submitter_name\", \"status\", \"submission_date\", \"notes\")\nVALUES \n  (6, 6, 'Scaling Kubernetes in Production', 'Learn how to scale Kubernetes clusters to support enterprise workloads', 2, 'David G. Simmons', 'submitted', '2023-01-10', 'Submitted before deadline'),\n  (7, 6, 'Observability Best Practices', 'How to implement effective observability for cloud native applications', 2, 'David G. Simmons', 'accepted', '2023-01-12', 'Accepted for main track'),\n  (8, 6, 'GitOps Workflows with Flux', 'Implementing GitOps practices using Flux and Kubernetes', 2, 'David G. Simmons', 'submitted', '2023-01-14', 'Waiting for review'),\n  (9, 7, 'Open Source Program Office Best Practices', 'How to establish and run an effective OSPO', 2, 'David G. Simmons', 'submitted', '2023-02-01', 'Submitted for consideration'),\n  (10, 7, 'Contributing to Open Source Projects', 'A guide to making your first contributions', 2, 'David G. Simmons', 'rejected', '2023-02-05', 'Similar talk already accepted')\nON CONFLICT (id) DO NOTHING;\n\n-- Attendees\nINSERT INTO \"attendees\" (\"id\", \"event_id\", \"name\", \"email\", \"role\", \"user_id\", \"notes\")\nVALUES \n  (6, 6, 'Alex Johnson', 'alex@example.com', 'Developer', 2, 'Speaking at the event'),\n  (7, 6, 'Sam Smith', 'sam@example.com', 'Product Manager', NULL, 'Attending workshops'),\n  (8, 6, 'Robin Patel', 'robin@example.com', 'Developer', NULL, 'Interested in service mesh talks'),\n  (9, 7, 'Alex Johnson', 'alex@example.com', 'Developer', 2, 'Giving a lightning talk'),\n  (10, 7, 'Jordan Lee', 'jordan@example.com', 'CTO', NULL, 'Interested in OSPO formation discussions')\nON CONFLICT (id) DO NOTHING;\n\n-- Sponsorships\nINSERT INTO \"sponsorships\" (\"id\", \"event_id\", \"level\", \"amount\", \"benefits\", \"status\", \"notes\")\nVALUES \n  (1, 6, 'Gold', 25000.00, 'Booth, 4 passes, logo on website', 'confirmed', 'Payment processed'),\n  (2, 7, 'Silver', 15000.00, 'Booth, 2 passes, logo on website', 'pending', 'Waiting for contract signature'),\n  (3, 9, 'Platinum', 50000.00, 'Keynote, large booth, 8 passes, top logo placement', 'proposed', 'Proposal sent')\nON CONFLICT (id) DO NOTHING;\n\n-- Stakeholders\nINSERT INTO \"stakeholders\" (\"id\", \"name\", \"email\", \"role\", \"department\", \"notes\")\nVALUES \n  (1, 'Jane Watson', 'jane.watson@example.com', 'Finance Director', 'Finance', 'Approves all sponsorship requests over $10,000'),\n  (2, 'Mark Robinson', 'mark.r@example.com', 'Legal Counsel', 'Legal', 'Reviews all contracts for compliance'),\n  (3, 'Sarah Chen', 'sarah.c@example.com', 'VP Engineering', 'Engineering', 'Approves engineering staff speaking engagements'),\n  (4, 'Michael Okonjo', 'michael.o@example.com', 'Marketing Director', 'Marketing', 'Coordinates all event marketing')\nON CONFLICT (id) DO NOTHING;\n\n-- Reset the PostgreSQL sequence for each table to the highest existing ID + 1\nSELECT setval('users_id_seq', (SELECT MAX(id) FROM users));\nSELECT setval('events_id_seq', (SELECT MAX(id) FROM events));\nSELECT setval('cfp_submissions_id_seq', (SELECT MAX(id) FROM cfp_submissions));\nSELECT setval('attendees_id_seq', (SELECT MAX(id) FROM attendees));\nSELECT setval('sponsorships_id_seq', (SELECT MAX(id) FROM sponsorships));\nSELECT setval('assets_id_seq', COALESCE((SELECT MAX(id) FROM assets), 0) + 1);\nSELECT setval('stakeholders_id_seq', (SELECT MAX(id) FROM stakeholders));\nSELECT setval('approval_workflows_id_seq', COALESCE((SELECT MAX(id) FROM approval_workflows), 0) + 1);\nSELECT setval('workflow_reviewers_id_seq', COALESCE((SELECT MAX(id) FROM workflow_reviewers), 0) + 1);\nSELECT setval('workflow_stakeholders_id_seq', COALESCE((SELECT MAX(id) FROM workflow_stakeholders), 0) + 1);\nSELECT setval('workflow_comments_id_seq', COALESCE((SELECT MAX(id) FROM workflow_comments), 0) + 1);\nSELECT setval('workflow_history_id_seq', COALESCE((SELECT MAX(id) FROM workflow_history), 0) + 1);"
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: postgres
  name: postgres-cm1
