apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ospo-app-network-policy
  namespace: prod-rh-events-org
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ospo-app
      app.kubernetes.io/component: application
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from nginx load balancer (if present)
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: nginx
    ports:
    - protocol: TCP
      port: 5000
  # Allow traffic from other app pods (for internal communication)
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: application
    ports:
    - protocol: TCP
      port: 5000
  # Allow external traffic (for user access)
  - from: []
    ports:
    - protocol: TCP
      port: 5000
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow connection to PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: database
    ports:
    - protocol: TCP
      port: 5432
  # Allow connection to Keycloak
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: auth
    ports:
    - protocol: TCP
      port: 8080
  # Allow HTTPS outbound (for external APIs, npm packages, etc.)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP outbound (for external APIs during development)
  - to: []
    ports:
    - protocol: TCP
      port: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgres-network-policy
  namespace: prod-rh-events-org
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ospo-app
      app.kubernetes.io/component: database
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from OSPO app
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: application
    ports:
    - protocol: TCP
      port: 5432
  # Allow traffic from Keycloak
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: auth
    ports:
    - protocol: TCP
      port: 5432
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: keycloak-network-policy
  namespace: prod-rh-events-org
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ospo-app
      app.kubernetes.io/component: auth
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from OSPO app
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: application
    ports:
    - protocol: TCP
      port: 8080
  # Allow external traffic (for user authentication)
  - from: []
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow connection to PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: database
    ports:
    - protocol: TCP
      port: 5432
  # Allow HTTPS outbound (for external identity providers, etc.)
  - to: []
    ports:
    - protocol: TCP
      port: 443
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: minio-network-policy
  namespace: prod-rh-events-org
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ospo-app
      app.kubernetes.io/component: storage
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from OSPO app
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: application
    ports:
    - protocol: TCP
      port: 9000
  # Allow external traffic (for file access)
  - from: []
    ports:
    - protocol: TCP
      port: 9000
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53