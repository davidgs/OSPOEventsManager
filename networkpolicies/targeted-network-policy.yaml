apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ospo-app-targeted-policy
  namespace: prod-rh-events-org
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ospo-app
      app.kubernetes.io/component: application
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow external traffic through OpenShift routes
  - from: []
    ports:
    - protocol: TCP
      port: 4576
  egress:
  # Allow all DNS traffic (UDP and TCP)
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow connection to PostgreSQL service
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: database
    ports:
    - protocol: TCP
      port: 5432
  # Allow connection to Keycloak service
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: auth
    ports:
    - protocol: TCP
      port: 8080
  # Allow connection to MinIO service
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: storage
    ports:
    - protocol: TCP
      port: 9000
  # Allow HTTPS outbound (for external APIs, npm packages, etc.)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP outbound (for external APIs)
  - to: []
    ports:
    - protocol: TCP
      port: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgres-targeted-policy
  namespace: prod-rh-events-org
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ospo-app
      app.kubernetes.io/component: database
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from OSPO app
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: application
    ports:
    - protocol: TCP
      port: 5432
  # Allow traffic from Keycloak
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: auth
    ports:
    - protocol: TCP
      port: 5432
  egress:
  # Allow all DNS traffic
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: keycloak-targeted-policy
  namespace: prod-rh-events-org
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ospo-app
      app.kubernetes.io/component: auth
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from OSPO app
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: application
    ports:
    - protocol: TCP
      port: 8080
  # Allow external traffic (through OpenShift routes)
  - from: []
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow all DNS traffic
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow connection to PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: database
    ports:
    - protocol: TCP
      port: 5432
  # Allow HTTPS outbound (for external identity providers, etc.)
  - to: []
    ports:
    - protocol: TCP
      port: 443
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: minio-targeted-policy
  namespace: prod-rh-events-org
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ospo-app
      app.kubernetes.io/component: storage
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from OSPO app
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ospo-app
          app.kubernetes.io/component: application
    ports:
    - protocol: TCP
      port: 9000
    - protocol: TCP
      port: 9001
  # Allow external traffic (through OpenShift routes)
  - from: []
    ports:
    - protocol: TCP
      port: 9000
    - protocol: TCP
      port: 9001
  egress:
  # Allow all DNS traffic
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53