# Default values for ospo-app
# This is a YAML-formatted file.

replicaCount: 1

# GitHub repository details
repository:
  url: https://github.com/davidgs/OSPOEventManager.git
  branch: main
  # Optional: Deploy from a specific commit
  # commitHash: 

# App Server configuration
appServer:
  image:
    # For local development using the docker-build.sh script
    repository: ospo-app
    tag: latest
    # When using a container registry, replace with your registry URL:
    # repository: your-registry.com/ospo-app
    # tag: version
    pullPolicy: Always
  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 512Mi
      cpu: 250m
  service:
    type: ClusterIP
    port: 5000
  env:
    NODE_ENV: production
    PORT: 5000
  # Override environment variables with a ConfigMap
  configMapName: ""
  # Override environment variables with a Secret
  secretName: ""

# Database configuration (PostgreSQL)
postgresql:
  enabled: true
  image:
    repository: postgres
    tag: 14-alpine
    pullPolicy: IfNotPresent
  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 512Mi
      cpu: 250m
  service:
    port: 5432
  persistence:
    enabled: true
    storageClass: ""
    size: 10Gi
  auth:
    username: ospo_user
    # For production, use secrets to manage these values
    # database and password will be generated and stored in a secret if not provided
    database: ospo_db
    existingSecret: ""
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: password

# Keycloak configuration
keycloak:
  enabled: true
  image:
    repository: quay.io/keycloak/keycloak
    tag: 21.1.1
    pullPolicy: IfNotPresent
  resources:
    limits:
      memory: 2Gi
      cpu: 1000m
    requests:
      memory: 1Gi
      cpu: 500m
  service:
    type: ClusterIP
    port: 8080
  persistence:
    enabled: true
    storageClass: ""
    size: 5Gi
  auth:
    adminUser: admin
    # For production, use secrets to manage these values
    existingSecret: ""
    secretKeys:
      adminPasswordKey: admin-password
  extraEnv:
    - name: KC_DB
      value: postgres
    - name: KC_DB_URL_HOST
      value: "{{ .Release.Name }}-postgresql"
    - name: KC_DB_URL_PORT
      value: "5432"
    - name: KC_DB_URL_DATABASE
      value: "keycloak"
    - name: KC_DB_USERNAME
      value: "postgres"
    - name: KC_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: "{{ .Release.Name }}-postgresql"
          key: postgres-password
    - name: KC_FEATURES
      value: "preview"
    - name: KC_LOG_LEVEL
      value: "INFO,org.keycloak:DEBUG,org.infinispan:INFO"
    - name: KC_HEALTH_ENABLED
      value: "true"
    - name: KC_HTTP_ENABLED
      value: "true"
    - name: KC_METRICS_ENABLED
      value: "true"
    - name: KC_PROXY
      value: "edge"
    - name: KC_HOSTNAME_STRICT
      value: "false"

# Object/File Storage (MinIO)
minio:
  enabled: true
  image:
    repository: quay.io/minio/minio
    tag: latest
    pullPolicy: IfNotPresent
  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 512Mi
      cpu: 250m
  service:
    type: ClusterIP
    port: 9000
    consolePort: 9001
  persistence:
    enabled: true
    storageClass: ""
    size: 20Gi
  auth:
    rootUser: minio
    # For production, use secrets to manage these values
    existingSecret: ""
    secretKeys:
      rootPasswordKey: root-password
  defaultBuckets: "uploads"

# LoadBalancer configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    # Enable TLS
    # cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: ospo-app.example.com
      paths:
        - path: /
          pathType: Prefix
          # Specify backend service to route to
          backend:
            service: ospo-app-service
            port: 80
  tls:
    - secretName: ospo-app-tls
      hosts:
        - ospo-app.example.com

# Shared volume for file uploads between pods
sharedVolume:
  enabled: true
  storageClass: ""
  size: 10Gi
  mountPath: /app/uploads

# Application secrets
secrets:
  # Secret key for session
  sessionSecret: ""
  # Database connection
  databaseUrl: ""
  # Keycloak client secret
  keycloakSecret: ""
  # MinIO connection
  minioAccessKey: ""
  minioSecretKey: ""