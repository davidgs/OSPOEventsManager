apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-keycloak
  labels:
    app: {{ .Release.Name }}-keycloak
    {{- include "ospo-app.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-keycloak
      {{- include "ospo-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-keycloak
        {{- include "ospo-app.selectorLabels" . | nindent 8 }}
      annotations:
        # Add timestamp annotation to force update on image rebuild
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      containers:
        - name: keycloak
          image: {{ .Values.keycloak.image.repository }}:{{ .Values.keycloak.image.tag }}
          imagePullPolicy: {{ .Values.keycloak.image.pullPolicy }}
          command: 
            - "/opt/keycloak/bin/kc.sh"
            - "start-dev"
            - "--db=postgres"
            - "--db-url-host={{ .Release.Name }}-postgresql"
            - "--db-url-database=keycloak"
          ports:
            - name: http
              containerPort: {{ .Values.keycloak.service.port }}
              protocol: TCP
          env:
            # Use PostgreSQL database for data persistence
            - name: KC_DB
              value: "postgres"
            - name: KC_DB_URL
              value: "jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/keycloak"
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: postgres-user
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: postgres-password
            - name: KEYCLOAK_ADMIN
              value: {{ .Values.keycloak.auth.adminUser }}
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "ospo-app.keycloak.secretName" . }}
                  key: {{ .Values.keycloak.auth.secretKeys.adminPasswordKey }}
            {{- range .Values.keycloak.extraEnv }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.keycloak.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /opt/keycloak/data
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: data
          {{- if .Values.keycloak.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-keycloak-data
          {{- else }}
          emptyDir: {}
          {{- end }}