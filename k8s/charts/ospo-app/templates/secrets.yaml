{{- if not .Values.postgresql.auth.existingSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-postgresql-credentials
  labels:
    {{- include "ospo-app.labels" . | nindent 4 }}
type: Opaque
data:
  {{ $postgresUserPwd := default "ospo_password123" .Values.postgresql.auth.password -}}
  postgres-password: {{ $postgresUserPwd | b64enc | quote }}
  password: {{ $postgresUserPwd | b64enc | quote }}
  database-url: {{ printf "postgresql://%s:%s@%s-postgresql:%s/%s" .Values.postgresql.auth.username $postgresUserPwd .Release.Name .Values.postgresql.service.port .Values.postgresql.auth.database | b64enc | quote }}
---
{{- end }}
{{- if not .Values.keycloak.auth.existingSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-keycloak-credentials
  labels:
    {{- include "ospo-app.labels" . | nindent 4 }}
type: Opaque
data:
  admin-password: {{ randAlphaNum 16 | b64enc | quote }}
  client-secret: {{ randAlphaNum 32 | b64enc | quote }}
---
{{- end }}
{{- if not .Values.minio.auth.existingSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-minio-credentials
  labels:
    {{- include "ospo-app.labels" . | nindent 4 }}
type: Opaque
data:
  root-password: {{ randAlphaNum 16 | b64enc | quote }}
  access-key: {{ default "minio" .Values.minio.auth.rootUser | b64enc | quote }}
  secret-key: {{ randAlphaNum 16 | b64enc | quote }}
---
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-app-secrets
  labels:
    {{- include "ospo-app.labels" . | nindent 4 }}
type: Opaque
data:
  session-secret: {{ default (randAlphaNum 32) .Values.secrets.sessionSecret | b64enc | quote }}