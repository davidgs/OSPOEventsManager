apiVersion: batch/v1
kind: Job
metadata:
  name: post-install-job
  labels:
    {{- include "ospo-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: installer
  annotations:
    "helm.sh/hook": post-install,pre-upgrade
    "helm.sh/hook-weight": "25"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        {{- include "ospo-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: installer
    spec:
      restartPolicy: OnFailure
      containers:
        - name: post-install
          image: curlimages/curl:8.5.0
          command: ['sh', '-c']
          args:
            - |
              echo "Post-installation tasks"
              echo "Waiting for services to be ready..."
              
              # Wait for Keycloak to be ready
              echo "Waiting for Keycloak to start..."
              for i in $(seq 1 60); do
                if curl -s http://keycloak.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.keycloak.service.port }}/auth/health/ready | grep -q "UP"; then
                  echo "Keycloak is available and ready"
                  break
                fi
                echo "Waiting for Keycloak... attempt $i/60"
                sleep 5
                if [ $i -eq 60 ]; then
                  echo "Keycloak did not become ready in time, but continuing with other checks"
                fi
              done
              
              # Check MinIO
              echo "Checking MinIO..."
              for i in $(seq 1 30); do
                if curl -s -f http://minio.{{ .Release.Namespace }}.svc.cluster.local:9000/minio/health/ready; then
                  echo "MinIO is available and ready"
                  break
                fi
                echo "Waiting for MinIO... attempt $i/30"
                sleep 5
                if [ $i -eq 30 ]; then
                  echo "MinIO did not become ready in time, but continuing with other checks"
                fi
              done
              
              # Check application service
              echo "Checking application service..."
              for i in $(seq 1 30); do
                if curl -s http://ospo-app.{{ .Release.Namespace }}.svc.cluster.local:5000/api/health; then
                  echo "Application is available and ready"
                  break
                fi
                echo "Waiting for Application... attempt $i/30"
                sleep 5
                if [ $i -eq 30 ]; then
                  echo "Application did not become ready in time, but continuing"
                fi
              done
              
              echo "Post-installation checks completed!"
              echo "Note: If any services failed to respond, they may still be initializing and should become available shortly."