{{- if and .Values.otterize.enabled .Values.otterize.intents.enabled }}
{{- range .Values.otterize.intents.policies }}
---
apiVersion: k8s.otterize.com/v1alpha3
kind: ClientIntents
metadata:
  name: {{ .name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "ospo-app.labels" $ | nindent 4 }}
    app.kubernetes.io/component: network-policy
spec:
  service:
    name: {{ .from }}
  calls:
    - name: {{ .to }}
      {{- if .ports }}
      type: HTTP
      HTTPResources:
        {{- range .ports }}
        - path: "*"
          methods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
        {{- end }}
      {{- else }}
      type: HTTP
      HTTPResources:
        - path: "*"
          methods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
      {{- end }}
{{- end }}

{{- if .Values.otterize.intents.enabled }}
---
# Intent for external traffic to reach the application via OpenShift routes
apiVersion: k8s.otterize.com/v1alpha3
kind: ClientIntents
metadata:
  name: external-to-ospo-app
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ospo-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: network-policy
spec:
  service:
    name: router  # OpenShift router
  calls:
    - name: {{ include "ospo-app.fullname" . }}
      type: HTTP
      HTTPResources:
        - path: "*"
          methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]

---
# Intent for health checks and monitoring
apiVersion: k8s.otterize.com/v1alpha3
kind: ClientIntents
metadata:
  name: monitoring-to-services
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ospo-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: network-policy
spec:
  service:
    name: prometheus-operator  # Or your monitoring solution
  calls:
    - name: {{ include "ospo-app.fullname" . }}
      type: HTTP
      HTTPResources:
        - path: "/api/health"
          methods: ["GET"]
        - path: "/metrics"
          methods: ["GET"]
    {{- if .Values.keycloak.enabled }}
    - name: keycloak
      type: HTTP
      HTTPResources:
        - path: "/auth/health"
          methods: ["GET"]
        - path: "/auth/metrics"
          methods: ["GET"]
    {{- end }}
    {{- if .Values.minio.enabled }}
    - name: minio
      type: HTTP
      HTTPResources:
        - path: "/minio/health/live"
          methods: ["GET"]
        - path: "/minio/health/ready"
          methods: ["GET"]
    {{- end }}

---
# Intent for DNS resolution
apiVersion: k8s.otterize.com/v1alpha3
kind: ClientIntents
metadata:
  name: dns-resolution
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ospo-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: network-policy
spec:
  service:
    name: {{ include "ospo-app.fullname" . }}
  calls:
    - name: kube-dns
      type: DNS
    - name: openshift-dns
      type: DNS

{{- if .Values.keycloak.enabled }}
---
apiVersion: k8s.otterize.com/v1alpha3
kind: ClientIntents
metadata:
  name: keycloak-dns-resolution
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ospo-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: network-policy
spec:
  service:
    name: keycloak
  calls:
    - name: kube-dns
      type: DNS
    - name: openshift-dns
      type: DNS
{{- end }}

{{- end }}
{{- end }}