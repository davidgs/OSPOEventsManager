{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    {{- include "ospo-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
  annotations:
    "helm.sh/hook-weight": "-10"
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "ospo-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "ospo-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      {{- if .Values.openshift.enabled }}
      securityContext:
        {{- toYaml .Values.postgresql.securityContext | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ospo-app.serviceAccountName" . }}
      containers:
        - name: postgres
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          {{- if .Values.openshift.enabled }}
          securityContext:
            {{- toYaml .Values.postgresql.securityContext | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.auth.password }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database }}
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U {{ .Values.postgresql.auth.username }} -d {{ .Values.postgresql.auth.database }}
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U {{ .Values.postgresql.auth.username }} -d {{ .Values.postgresql.auth.database }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
      volumes:
        - name: postgres-data
          {{- if .Values.postgresql.persistence.enabled }}
          persistentVolumeClaim:
            claimName: postgres-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    {{- include "ospo-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  ports:
    - port: {{ .Values.postgresql.service.port }}
      targetPort: postgres
      protocol: TCP
      name: postgres
  selector:
    {{- include "ospo-app.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: database
{{- if .Values.postgresql.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  labels:
    {{- include "ospo-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  accessModes:
    - ReadWriteOnce
  {{- if .Values.postgresql.persistence.storageClass }}
  storageClassName: {{ .Values.postgresql.persistence.storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.postgresql.persistence.size }}
{{- end }}
{{- end }}