{{- if .Values.minio.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  labels:
    {{- include "ospo-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: storage
  annotations:
    "helm.sh/hook-weight": "-5"
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "ospo-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: storage
  template:
    metadata:
      labels:
        {{- include "ospo-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: storage
    spec:
      {{- if .Values.openshift.enabled }}
      securityContext:
        {{- toYaml .Values.minio.securityContext | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ospo-app.serviceAccountName" . }}
      containers:
        - name: minio
          image: "{{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag }}"
          imagePullPolicy: {{ .Values.minio.image.pullPolicy }}
          {{- if .Values.openshift.enabled }}
          securityContext:
            {{- toYaml .Values.minio.securityContext | nindent 12 }}
          {{- end }}
          command:
            - /usr/bin/docker-entrypoint.sh
          args:
            - minio
            - server
            - /data
            - --console-address
            - ":9001"
          ports:
            - name: api
              containerPort: 9000
              protocol: TCP
            - name: console
              containerPort: 9001
              protocol: TCP
          env:
            - name: MINIO_ROOT_USER
              value: {{ .Values.minio.auth.rootUser }}
            - name: MINIO_ROOT_PASSWORD
              value: {{ .Values.minio.auth.rootPassword }}
            - name: MINIO_BROWSER_REDIRECT_URL
              value: "http://localhost:9001"
          volumeMounts:
            - name: data
              mountPath: /data
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: api
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: api
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.minio.resources | nindent 12 }}
      volumes:
        - name: data
          {{- if .Values.minio.persistence.enabled }}
          persistentVolumeClaim:
            claimName: minio-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  labels:
    {{- include "ospo-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: storage
spec:
  ports:
    - port: {{ .Values.minio.service.apiPort }}
      targetPort: api
      protocol: TCP
      name: api
    - port: {{ .Values.minio.service.consolePort }}
      targetPort: console
      protocol: TCP
      name: console
  selector:
    {{- include "ospo-app.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: storage
{{- if .Values.minio.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  labels:
    {{- include "ospo-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  {{- if .Values.minio.persistence.storageClass }}
  storageClassName: {{ .Values.minio.persistence.storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.minio.persistence.size }}
{{- end }}
{{- end }}