apiVersion: batch/v1
kind: Job
metadata:
  name: keycloak-setup
spec:
  ttlSecondsAfterFinished: 100
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: keycloak-setup
        image: curlimages/curl:8.1.2
        command: ["/bin/sh", "-c"]
        args:
        - |
          # Wait for Keycloak to be ready
          echo "Waiting for Keycloak to be ready..."
          until curl -s http://keycloak:8080/health/ready | grep -q "UP"; do
            echo "Keycloak not ready yet, waiting..."
            sleep 5
          done
          
          echo "Keycloak is ready, obtaining admin token..."
          
          # Get admin token
          TOKEN=$(curl -s -X POST http://keycloak:8080/realms/master/protocol/openid-connect/token \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "username=admin" \
            -d "password=admin" \
            -d "grant_type=password" \
            -d "client_id=admin-cli" | grep -o '"access_token":"[^"]*' | cut -d'"' -f4)
          
          if [ -z "$TOKEN" ]; then
            echo "Failed to obtain admin token"
            exit 1
          fi
          
          echo "Admin token obtained, creating realm..."
          
          # Check if realm already exists
          REALM_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer $TOKEN" \
            http://keycloak:8080/admin/realms/ospo-events)
          
          if [ "$REALM_EXISTS" = "200" ]; then
            echo "Realm 'ospo-events' already exists"
          else
            # Create realm using JSON file
            curl -s -X POST \
              -H "Authorization: Bearer $TOKEN" \
              -H "Content-Type: application/json" \
              -d @/config/realm.json \
              http://keycloak:8080/admin/realms
            
            if [ $? -eq 0 ]; then
              echo "Realm 'ospo-events' created successfully"
            else
              echo "Failed to create realm"
              exit 1
            fi
          fi
          
          echo "Keycloak setup complete"
        volumeMounts:
        - name: keycloak-realm-config
          mountPath: /config
      volumes:
      - name: keycloak-realm-config
        configMap:
          name: keycloak-realm-config