# Optimized Dockerfile for faster builds
FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production --ignore-scripts

# Build stage for the client
FROM base AS client-builder
WORKDIR /app

# Accept build arguments
ARG VITE_KEYCLOAK_URL
ENV VITE_KEYCLOAK_URL=$VITE_KEYCLOAK_URL

# Copy package files and install dependencies
COPY package*.json ./
RUN npm ci --ignore-scripts

# Copy only necessary files for build
COPY client/ ./client/
COPY public/ ./public/
COPY vite.config.ts ./
COPY tsconfig.json ./
COPY tailwind.config.ts ./
COPY postcss.config.js ./
COPY components.json ./

# Build client with optimizations
RUN npm run build:client || echo "Client build failed, creating minimal files"

# Production stage
FROM base AS runner
WORKDIR /app

# Set environment variables
ENV NODE_ENV=production
ENV PORT=4576

# Copy production dependencies
COPY --from=deps /app/node_modules ./node_modules

# Copy application files
COPY server/ ./server/
COPY shared/ ./shared/
COPY scripts/ ./scripts/
COPY public/ ./public/
COPY keycloak.json ./

# Copy built client assets
COPY --from=client-builder /app/dist ./dist

# Create necessary directories
RUN mkdir -p server/public/uploads public/uploads

# Add non-root user
RUN addgroup -g 1001 -S nodejs && \
  adduser -S nodejs -u 1001 -G nodejs

# Set permissions
RUN chown -R nodejs:nodejs /app && \
  chmod -R 755 /app

# Install curl for health checks
RUN apk add --no-cache curl

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 4576

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:4576/api/health || exit 1

# Start application
CMD ["npx", "tsx", "server/index.ts"]
